VERS_1.2 {
	global:
		qpol_avrule_*;
		qpol_bool_*;
		qpol_cat_*;
		qpol_class_*;
		qpol_common_*;
		qpol_cond_*;
		qpol_constraint_*;
		qpol_context_*;
		qpol_default_policy_find;
		qpol_fs_use_*;
		qpol_genfscon_*;
		qpol_isid_*;
		qpol_iterator_end;
		qpol_iterator_next;
		qpol_iterator_get_*;
		qpol_iterator_destroy;
		qpol_level_*;
		qpol_mls_*;
		qpol_module_*;
		qpol_netifcon_*;
		qpol_nodecon_*;
		qpol_perm_*;
		qpol_policy_append_module;
		qpol_policy_build_syn_rule_table;
		qpol_policy_destroy;
		qpol_policy_get_*;
		qpol_policy_has_capability;
		qpol_policy_open_from_file;
		qpol_policy_open_from_file_no_rules;
		qpol_policy_open_from_memory;
		qpol_policy_rebuild;
		qpol_policy_reevaluate_conds;
		qpol_portcon_*;
		qpol_range_trans_*;
		qpol_filename_trans_*;
		qpol_role_*;
		qpol_syn_avrule_*;
		qpol_syn_terule_*;
		qpol_terule_*;
		qpol_type_get_alias_iter;
		qpol_type_get_attr_iter;
		qpol_type_get_isalias;
		qpol_type_get_isattr;
		qpol_type_get_name;
		qpol_type_get_type_iter;
		qpol_type_get_value;
		qpol_type_set_*;
		qpol_user_*;
		qpol_validatetrans_*;
		libqpol_get_version;
	local: *;
};

VERS_1.3 {
	global:
		qpol_policy_open_from_file;
		qpol_policy_open_from_memory;
		qpol_policy_rebuild;
} VERS_1.2;

VERS_1.4 {
	global:
		qpol_type_get_ispermissive;
		qpol_type_get_parent_name;
} VERS_1.3;

VERS_1.5 {
	global:
		qpol_policy_permissive_*;
		qpol_permissive_*;
		qpol_typebounds_*;
		qpol_rolebounds_*;
		qpol_userbounds_*;
		qpol_policy_polcap_*;
		qpol_polcap_*;
} VERS_1.4;
