<sechecker version="1.0">

<global>
	<!--output type options are full, long, short, stats -->
	<output type="full"/>
	<selinux_config path="/etc/selinux/config"/>
</global>

<!-- Sample Module Block
declaration: all three attributes are required
name = name of module
status = {"on", "off"} 
when on run automatically when off run only if needed for another module
mode = {"system","development", "both"}
system mode means the module requires an actively running selinux system
development means that a full policy development tree is required
both is the union of the above options, use sparingly
<module name="name" status="on" mode="system">
	<dependency module_name="name"/>
		name of another module that must be run before this one
		you may have multiple dependency entries, this field is optional
	<require pol_type="source" pol_ver="12"/>
		require either a source or binary policy or a minimum version
		this field is optional
	<output type="short" header="no"/>
		output options are the same as the global level
		specifying a value here overrides the global setting for this module
		additionally there is a field for printing the header values: "no" & "yes"
		default is yes if not specified, output field is optional
	<option name="opt_name" value="value string"/>
		specify any other options needed by the module's initialization function
		as name value pairs, you may have multiple entries name of each should be unique
</module>
-->

<module name="domain_type" status="off" mode="development">
	<require pol_type="source"/>
	<option name="domain_attribute" value="domain"/>
</module>

<module name="file_type" status="off" mode="development">
	<require pol_type="source"/>
	<option name="file_type_attribute" value="file_type"/>
	<option name="file_contexts_path" value="/src/policy/file_contexts/file_contexts"/> 
</module>

<module name="domain_and_file_type" status="on" mode="development">
	<dependency name="domain_type"/>
	<dependency name="file_type"/>
	<require pol_type="source"/>
</module>

<module name="empty_role" status="on" mode="development">
	<output type="short"/>
</module>

<module name="empty_user" status="on" mode="development">
	<output type="short"/>
</module>

<module name="empty_attribute" status="on" mode="development">
	<require pol_type="source"/>
	<output type="short"/>
</module>

</sechecker>
